#!/bin/bash
#
# Using this script instead of objdump enables perf to disassemble
# and annotate any JIT code (given a symbol file).
#
# To run perf without root:
#   kernel.perf_event_paranoid = -1
# To trace a process without root:
#   kernel.yama.ptrace_scope = 0
#
# Example usage:
# $ perf top -p $pid --objdump perfobjdump

# Largely inspired by perf-disassemble.sh from Dolphin-emu Tools/
# by Tillmann Karras <tilkax@gmail.com>.

function is_aot_dump() {
  for a in "$@"; do
    case "$a" in
      /tmp/perf-*.map)
        return 1
      ;;
    esac
  done
  return 0
}

if is_aot_dump "$@" ; then
  exec objdump "$@"
fi

pid=0
start=0
stop=0

for a in "$@"; do
    case "$a" in
        /tmp/perf-*.map)
          pid="${a#/tmp/perf-}"
          pid="${pid%.map}"
          shift
          ;;
        -M | --no-show-raw | -S | -C | -l | -d)
          shift
            ;;
        --start-address=*)
            start="${a##--start-address=}"
            shift
            ;;
        --stop-address=*)
            stop="${a##--stop-address=}"
            shift
            ;;
        -*)
            echo "Unknown parameter '$1'" >&2
            exit 1
            ;;
    esac
done
exec unjit -p "$pid" --start "$start" --stop "$stop"
